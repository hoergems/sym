#include "integrate.hpp"

using namespace boost::numeric::odeint;
using std::endl;
using std::cout;

namespace shared{

template<class T>
struct VecToList
{
    static PyObject* convert(const std::vector<T>& vec)
    {
        boost::python::list* l = new boost::python::list();
        for(size_t i = 0; i < vec.size(); i++)
            (*l).append(vec[i]);

        return l->ptr();
    }
};

Integrate::Integrate(double k) {	
	cout << "Hello" << endl;
}

void Integrate::do_integration(std::vector<double> &x, std::vector<double> &int_times) const {
	double t0 = int_times[0];
	double te = int_times[1];
	double step_size = int_times[2];
	cout << "integrate" << endl;
	for(size_t i = 0; i < x.size(); i++) {
		    cout << x[i] << " " << endl;	
	}
	size_t k = integrate_const(runge_kutta4<state_type>() ,
		                       std::bind(&Integrate::ode , this , pl::_1 , pl::_2 , pl::_3),
		                       x , t0 , te , step_size);
	cout << "k " << k << endl;
	for(size_t i = 0; i < x.size(); i++) {
	    cout << x[i] << " " << endl;	
	}
}

void Integrate::setup(std::vector<double> &thetas_star, 
		              std::vector<double> &dot_thetas_star, 
		              std::vector<double> &rhos_star) {	
	thetas_star_.clear();
	dot_thetas_star_.clear();
	rhos_star_.clear();
	for (size_t i = 0; i < thetas_star.size(); i++) {
		thetas_star_.push_back(thetas_star[i]);
		dot_thetas_star_.push_back(dot_thetas_star[i]);
		rhos_star_.push_back(rhos_star[i]);
	}
	cout << "setup" << endl;
}

void Integrate::ode(const state_type &x , state_type &dxdt , double t) const {std::vector<double> terms({x[3], x[4], 2.5*pow(dot_thetas_star_[0], 2)*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)*sin(1.0*thetas_star_[1])/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) + rhos_star_[0]*(pow(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28, 2)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) + 1.0/(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)) - rhos_star_[1]*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) + (-dot_thetas_star_[0] + x[3])*(5.0*dot_thetas_star_[0]*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)*sin(1.0*thetas_star_[1])/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) + (2*dot_thetas_star_[0]*(5.0*sin(1.0*thetas_star_[0]) + 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])) - 2*dot_thetas_star_[1]*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])))*(-pow(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28, 2)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) - 1/(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28))) + (-dot_thetas_star_[1] + x[4])*(-pow(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28, 2)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) - 1/(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28))*(dot_thetas_star_[0]*(-2.5*sin(1.0*thetas_star_[1]) + 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])) - dot_thetas_star_[1]*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])) - (dot_thetas_star_[0] + dot_thetas_star_[1])*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))) + (-thetas_star_[0] + x[0])*(2.5*pow(dot_thetas_star_[0], 2)*(-10.0*sin(1.0*thetas_star_[0]) - 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*sin(1.0*thetas_star_[1])/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) + 2.5*pow(dot_thetas_star_[0], 2)*(-10.0*sin(1.0*thetas_star_[0]) - 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)*sin(1.0*thetas_star_[1])/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) + 2.5*pow(dot_thetas_star_[0], 2)*(6.55*sin(1.0*thetas_star_[0]) - 6.25*sin(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 6.25*sin(2.0*thetas_star_[0] + 2.0*thetas_star_[1]))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)*sin(1.0*thetas_star_[1])/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*pow(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55, 2)) + 6.25*pow(dot_thetas_star_[0], 2)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)*sin(1.0*thetas_star_[1])*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) + rhos_star_[0]*((-20.0*sin(1.0*thetas_star_[0]) - 10.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*pow(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28, 2)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 3)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) + (-10.0*sin(1.0*thetas_star_[0]) - 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*pow(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28, 2)/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) + (-10.0*sin(1.0*thetas_star_[0]) - 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))/pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2) + (6.55*sin(1.0*thetas_star_[0]) - 6.25*sin(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 6.25*sin(2.0*thetas_star_[0] + 2.0*thetas_star_[1]))*pow(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28, 2)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2)*pow(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55, 2)) + 5.0*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55))) - rhos_star_[1]*(-10.0*sin(1.0*thetas_star_[0]) - 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) - rhos_star_[1]*(-10.0*sin(1.0*thetas_star_[0]) - 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) - rhos_star_[1]*(6.55*sin(1.0*thetas_star_[0]) - 6.25*sin(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 6.25*sin(2.0*thetas_star_[0] + 2.0*thetas_star_[1]))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*pow(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55, 2)) - 2.5*rhos_star_[1]*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) + (dot_thetas_star_[0]*(dot_thetas_star_[0]*(5.0*sin(1.0*thetas_star_[0]) + 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])) - dot_thetas_star_[1]*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))) - dot_thetas_star_[1]*(dot_thetas_star_[0] + dot_thetas_star_[1])*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])))*(-(-20.0*sin(1.0*thetas_star_[0]) - 10.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*pow(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28, 2)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 3)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) - (-10.0*sin(1.0*thetas_star_[0]) - 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*pow(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28, 2)/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) - (-10.0*sin(1.0*thetas_star_[0]) - 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))/pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2) - (6.55*sin(1.0*thetas_star_[0]) - 6.25*sin(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 6.25*sin(2.0*thetas_star_[0] + 2.0*thetas_star_[1]))*pow(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28, 2)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2)*pow(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55, 2)) - 5.0*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55))) + (dot_thetas_star_[0]*(dot_thetas_star_[0]*(5.0*cos(1.0*thetas_star_[0]) + 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1])) + 2.5*dot_thetas_star_[1]*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1])) + 2.5*dot_thetas_star_[1]*(dot_thetas_star_[0] + dot_thetas_star_[1])*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*(-pow(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28, 2)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) - 1/(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28))) + (-thetas_star_[1] + x[1])*(2.5*pow(dot_thetas_star_[0], 2)*(-2.5*sin(1.0*thetas_star_[1]) + 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)*sin(1.0*thetas_star_[1])/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) + 2.5*pow(dot_thetas_star_[0], 2)*(5.0*sin(1.0*thetas_star_[1]) - 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*sin(1.0*thetas_star_[1])/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) + 2.5*pow(dot_thetas_star_[0], 2)*(5.0*sin(1.0*thetas_star_[1]) - 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)*sin(1.0*thetas_star_[1])/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) + 2.5*pow(dot_thetas_star_[0], 2)*(6.25*sin(2.0*thetas_star_[1]) - 12.5*sin(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 6.25*sin(2.0*thetas_star_[0] + 2.0*thetas_star_[1]))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)*sin(1.0*thetas_star_[1])/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*pow(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55, 2)) + 2.5*pow(dot_thetas_star_[0], 2)*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)*cos(1.0*thetas_star_[1])/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) + rhos_star_[0]*((-5.0*sin(1.0*thetas_star_[1]) + 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) + (5.0*sin(1.0*thetas_star_[1]) - 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*pow(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28, 2)/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) + (5.0*sin(1.0*thetas_star_[1]) - 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))/pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2) + (10.0*sin(1.0*thetas_star_[1]) - 10.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*pow(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28, 2)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 3)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) + (6.25*sin(2.0*thetas_star_[1]) - 12.5*sin(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 6.25*sin(2.0*thetas_star_[0] + 2.0*thetas_star_[1]))*pow(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28, 2)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2)*pow(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55, 2))) - rhos_star_[1]*(-2.5*sin(1.0*thetas_star_[1]) + 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) - rhos_star_[1]*(5.0*sin(1.0*thetas_star_[1]) - 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) - rhos_star_[1]*(5.0*sin(1.0*thetas_star_[1]) - 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) - rhos_star_[1]*(6.25*sin(2.0*thetas_star_[1]) - 12.5*sin(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 6.25*sin(2.0*thetas_star_[0] + 2.0*thetas_star_[1]))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*pow(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55, 2)) + (dot_thetas_star_[0]*(dot_thetas_star_[0]*(5.0*sin(1.0*thetas_star_[0]) + 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])) - dot_thetas_star_[1]*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))) - dot_thetas_star_[1]*(dot_thetas_star_[0] + dot_thetas_star_[1])*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])))*(-(-5.0*sin(1.0*thetas_star_[1]) + 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) - (5.0*sin(1.0*thetas_star_[1]) - 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*pow(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28, 2)/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) - (5.0*sin(1.0*thetas_star_[1]) - 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))/pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2) - (10.0*sin(1.0*thetas_star_[1]) - 10.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*pow(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28, 2)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 3)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) - (6.25*sin(2.0*thetas_star_[1]) - 12.5*sin(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 6.25*sin(2.0*thetas_star_[0] + 2.0*thetas_star_[1]))*pow(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28, 2)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2)*pow(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55, 2))) + (dot_thetas_star_[0]*(2.5*dot_thetas_star_[0]*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - dot_thetas_star_[1]*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))) - dot_thetas_star_[1]*(dot_thetas_star_[0] + dot_thetas_star_[1])*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1])))*(-pow(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28, 2)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) - 1/(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28))) + (dot_thetas_star_[0]*(dot_thetas_star_[0]*(5.0*sin(1.0*thetas_star_[0]) + 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])) - dot_thetas_star_[1]*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))) - dot_thetas_star_[1]*(dot_thetas_star_[0] + dot_thetas_star_[1])*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])))*(-pow(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28, 2)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) - 1/(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)), -2.5*pow(dot_thetas_star_[0], 2)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)*sin(1.0*thetas_star_[1])/(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55) - rhos_star_[0]*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) + rhos_star_[1]*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55) + (-dot_thetas_star_[0] + x[3])*(-5.0*dot_thetas_star_[0]*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)*sin(1.0*thetas_star_[1])/(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55) + (2*dot_thetas_star_[0]*(5.0*sin(1.0*thetas_star_[0]) + 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])) - 2*dot_thetas_star_[1]*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55))) + (-dot_thetas_star_[1] + x[4])*(dot_thetas_star_[0]*(-2.5*sin(1.0*thetas_star_[1]) + 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])) - dot_thetas_star_[1]*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])) - (dot_thetas_star_[0] + dot_thetas_star_[1])*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) + (-thetas_star_[0] + x[0])*(-2.5*pow(dot_thetas_star_[0], 2)*(-10.0*sin(1.0*thetas_star_[0]) - 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*sin(1.0*thetas_star_[1])/(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55) - 2.5*pow(dot_thetas_star_[0], 2)*(6.55*sin(1.0*thetas_star_[0]) - 6.25*sin(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 6.25*sin(2.0*thetas_star_[0] + 2.0*thetas_star_[1]))*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)*sin(1.0*thetas_star_[1])/pow(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55, 2) - rhos_star_[0]*(-10.0*sin(1.0*thetas_star_[0]) - 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) - rhos_star_[0]*(-10.0*sin(1.0*thetas_star_[0]) - 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) - rhos_star_[0]*(6.55*sin(1.0*thetas_star_[0]) - 6.25*sin(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 6.25*sin(2.0*thetas_star_[0] + 2.0*thetas_star_[1]))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*pow(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55, 2)) - 2.5*rhos_star_[0]*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) + rhos_star_[1]*(-10.0*sin(1.0*thetas_star_[0]) - 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))/(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55) + rhos_star_[1]*(6.55*sin(1.0*thetas_star_[0]) - 6.25*sin(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 6.25*sin(2.0*thetas_star_[0] + 2.0*thetas_star_[1]))*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/pow(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55, 2) + (dot_thetas_star_[0]*(dot_thetas_star_[0]*(5.0*sin(1.0*thetas_star_[0]) + 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])) - dot_thetas_star_[1]*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))) - dot_thetas_star_[1]*(dot_thetas_star_[0] + dot_thetas_star_[1])*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])))*(-10.0*sin(1.0*thetas_star_[0]) - 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) + (dot_thetas_star_[0]*(dot_thetas_star_[0]*(5.0*sin(1.0*thetas_star_[0]) + 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])) - dot_thetas_star_[1]*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))) - dot_thetas_star_[1]*(dot_thetas_star_[0] + dot_thetas_star_[1])*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])))*(-10.0*sin(1.0*thetas_star_[0]) - 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) + (dot_thetas_star_[0]*(dot_thetas_star_[0]*(5.0*sin(1.0*thetas_star_[0]) + 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])) - dot_thetas_star_[1]*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))) - dot_thetas_star_[1]*(dot_thetas_star_[0] + dot_thetas_star_[1])*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])))*(6.55*sin(1.0*thetas_star_[0]) - 6.25*sin(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 6.25*sin(2.0*thetas_star_[0] + 2.0*thetas_star_[1]))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*pow(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55, 2)) + 2.5*(dot_thetas_star_[0]*(dot_thetas_star_[0]*(5.0*sin(1.0*thetas_star_[0]) + 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])) - dot_thetas_star_[1]*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))) - dot_thetas_star_[1]*(dot_thetas_star_[0] + dot_thetas_star_[1])*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])))*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) + (dot_thetas_star_[0]*(dot_thetas_star_[0]*(5.0*cos(1.0*thetas_star_[0]) + 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1])) + 2.5*dot_thetas_star_[1]*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1])) + 2.5*dot_thetas_star_[1]*(dot_thetas_star_[0] + dot_thetas_star_[1])*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55))) + (-thetas_star_[1] + x[1])*(-2.5*pow(dot_thetas_star_[0], 2)*(5.0*sin(1.0*thetas_star_[1]) - 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*sin(1.0*thetas_star_[1])/(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55) - 2.5*pow(dot_thetas_star_[0], 2)*(6.25*sin(2.0*thetas_star_[1]) - 12.5*sin(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 6.25*sin(2.0*thetas_star_[0] + 2.0*thetas_star_[1]))*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)*sin(1.0*thetas_star_[1])/pow(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55, 2) - 2.5*pow(dot_thetas_star_[0], 2)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)*cos(1.0*thetas_star_[1])/(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55) - rhos_star_[0]*(-2.5*sin(1.0*thetas_star_[1]) + 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) - rhos_star_[0]*(5.0*sin(1.0*thetas_star_[1]) - 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) - rhos_star_[0]*(5.0*sin(1.0*thetas_star_[1]) - 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) - rhos_star_[0]*(6.25*sin(2.0*thetas_star_[1]) - 12.5*sin(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 6.25*sin(2.0*thetas_star_[0] + 2.0*thetas_star_[1]))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*pow(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55, 2)) + rhos_star_[1]*(5.0*sin(1.0*thetas_star_[1]) - 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))/(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55) + rhos_star_[1]*(6.25*sin(2.0*thetas_star_[1]) - 12.5*sin(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 6.25*sin(2.0*thetas_star_[0] + 2.0*thetas_star_[1]))*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/pow(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55, 2) + (dot_thetas_star_[0]*(dot_thetas_star_[0]*(5.0*sin(1.0*thetas_star_[0]) + 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])) - dot_thetas_star_[1]*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))) - dot_thetas_star_[1]*(dot_thetas_star_[0] + dot_thetas_star_[1])*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])))*(-2.5*sin(1.0*thetas_star_[1]) + 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) + (dot_thetas_star_[0]*(dot_thetas_star_[0]*(5.0*sin(1.0*thetas_star_[0]) + 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])) - dot_thetas_star_[1]*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))) - dot_thetas_star_[1]*(dot_thetas_star_[0] + dot_thetas_star_[1])*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])))*(5.0*sin(1.0*thetas_star_[1]) - 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) + (dot_thetas_star_[0]*(dot_thetas_star_[0]*(5.0*sin(1.0*thetas_star_[0]) + 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])) - dot_thetas_star_[1]*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))) - dot_thetas_star_[1]*(dot_thetas_star_[0] + dot_thetas_star_[1])*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])))*(5.0*sin(1.0*thetas_star_[1]) - 5.0*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/(pow(-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28, 2)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55)) + (dot_thetas_star_[0]*(dot_thetas_star_[0]*(5.0*sin(1.0*thetas_star_[0]) + 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])) - dot_thetas_star_[1]*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))) - dot_thetas_star_[1]*(dot_thetas_star_[0] + dot_thetas_star_[1])*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])))*(6.25*sin(2.0*thetas_star_[1]) - 12.5*sin(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 6.25*sin(2.0*thetas_star_[0] + 2.0*thetas_star_[1]))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*pow(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55, 2)) + (dot_thetas_star_[0]*(2.5*dot_thetas_star_[0]*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - dot_thetas_star_[1]*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))) - dot_thetas_star_[1]*(dot_thetas_star_[0] + dot_thetas_star_[1])*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1])))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55))) + (dot_thetas_star_[0]*(dot_thetas_star_[0]*(5.0*sin(1.0*thetas_star_[0]) + 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])) - dot_thetas_star_[1]*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1]))) - dot_thetas_star_[1]*(dot_thetas_star_[0] + dot_thetas_star_[1])*(2.5*sin(1.0*thetas_star_[1]) - 2.5*sin(1.0*thetas_star_[0] + 1.0*thetas_star_[1])))*(2.5*cos(1.0*thetas_star_[1]) - 2.5*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 1.28)*(10.0*cos(1.0*thetas_star_[0]) - 5.0*cos(1.0*thetas_star_[1]) + 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) - 11.28)/((-10.0*cos(1.0*thetas_star_[0]) + 5.0*cos(1.0*thetas_star_[1]) - 5.0*cos(1.0*thetas_star_[0] + 1.0*thetas_star_[1]) + 11.28)*(6.55*cos(1.0*thetas_star_[0]) + 3.125*cos(2.0*thetas_star_[1]) - 6.25*cos(1.0*thetas_star_[0] + 2.0*thetas_star_[1]) + 3.125*cos(2.0*thetas_star_[0] + 2.0*thetas_star_[1]) - 6.55))});dxdt.clear();for(size_t i = 0; i < x.size(); i++) { dxdt.push_back(terms[i]); }} 

BOOST_PYTHON_MODULE(libintegrate) {
    using namespace boost::python;
    
    class_<std::vector<double> > ("v_double")
             .def(vector_indexing_suite<std::vector<double> >());
    
    class_<Integrate>("Integrate", init<double>())
                        .def("doIntegration", &Integrate::do_integration) 
                        .def("setup", &Integrate::setup)                        
    ;
}

}